# EditorConfig is awesome: http://EditorConfig.org

# top-most EditorConfig file
root = true

# Unix-style newlines with a newline ending every file
[*]
end_of_line = lf
insert_final_newline = true
charset = utf-8
indent_style = space
indent_size = 2
max_line_length = 100
curly_bracket_next_line = true
indent_brace_style = Allman

# CSharp formatting settings:
[*.cs]
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
dotnet_sort_system_directives_first = false

# use var when the type is on the right side of assignment operator
csharp_style_var_when_type_is_apparent = true:error

# IDE0017: Simplify object initialization
dotnet_style_object_initializer = true:error

# IDE0063: Use simple 'using' statement
csharp_prefer_simple_using_statement = true:error

# IDE0039: Use local function
csharp_style_pattern_local_over_anonymous_function = true:error

# IDE0044: Add readonly modifier
dotnet_style_readonly_field = true:error

# IDE1006: Naming Styles
dotnet_diagnostic.IDE1006.severity = error

# IDE0060: Remove unused parameter
dotnet_code_quality_unused_parameters = all:error

# IDE0051: Remove unused private members
dotnet_diagnostic.IDE0051.severity = error

# IDE0028: Simplify collection initialization
dotnet_style_collection_initializer = true:error

# IDE0052: Remove unread private members
dotnet_diagnostic.IDE0052.severity = error

# CA1062: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = error 

# CA1822: Member handleSystem does not access instance data and can be marked as static (Shared in VisualBasic)
dotnet_diagnostic.CA1822.severity = error
 
# CA1307: Specify StringComparison
dotnet_diagnostic.CA1307.severity = error 

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = error

# CA1724: The type name System conflicts in whole or in part with the namespace name 'System' defined in the .NET Framework. Rename the type to eliminate the conflict.
# @TODO rename Atlas.System
dotnet_diagnostic.CA1724.severity = none

# CA1303: Do not pass literals as localized parameters
# @TODO place all exception string in a lookup file for consistency
dotnet_diagnostic.CA1303.severity = none 

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = none

# CA1062: Validate arguments of public methods
# this is none because we have nullables turned on in this project so it cannot be null, no need to verify
# @TODO this should be error unless nullables are turned on
dotnet_diagnostic.CA1062.severity = none

# CS8632: The annotation for nullable reference types should only be used in code within a '#nullable' annotations context.
dotnet_diagnostic.CS8632.severity = silent 

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = none 

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = none

# Non-private static fields are PascalCase
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.severity = error
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.symbols = non_private_static_fields
dotnet_naming_rule.non_private_static_fields_should_be_pascal_case.style = non_private_static_field_style

dotnet_naming_symbols.non_private_static_fields.applicable_kinds = field
dotnet_naming_symbols.non_private_static_fields.applicable_accessibilities = public, protected, internal, protected internal, private protected
dotnet_naming_symbols.non_private_static_fields.required_modifiers = static

dotnet_naming_style.non_private_static_field_style.capitalization = pascal_case

dotnet_style_require_accessibility_modifiers = always:suggestion

# Constants are PascalCase
dotnet_naming_rule.constants_should_be_pascal_case.severity = error
dotnet_naming_rule.constants_should_be_pascal_case.symbols = constants
dotnet_naming_rule.constants_should_be_pascal_case.style = constant_style

dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const

dotnet_naming_style.constant_style.capitalization = pascal_case

# Static fields are camelCase and start with s_
dotnet_naming_rule.static_fields_should_be_camel_case.severity = error
dotnet_naming_rule.static_fields_should_be_camel_case.symbols = static_fields
dotnet_naming_rule.static_fields_should_be_camel_case.style = static_field_style

dotnet_naming_symbols.static_fields.applicable_kinds = field
dotnet_naming_symbols.static_fields.required_modifiers = static

dotnet_naming_style.static_field_style.capitalization = camel_case
dotnet_naming_style.static_field_style.required_prefix = s_

# Instance fields are camelCase and start with _
dotnet_naming_rule.instance_fields_should_be_camel_case.severity = error
dotnet_naming_rule.instance_fields_should_be_camel_case.symbols = instance_fields
dotnet_naming_rule.instance_fields_should_be_camel_case.style = instance_field_style

dotnet_naming_symbols.instance_fields.applicable_kinds = field

dotnet_naming_style.instance_field_style.capitalization = camel_case
dotnet_naming_style.instance_field_style.required_prefix = _

# Locals and parameters are camelCase
dotnet_naming_rule.locals_should_be_camel_case.severity = error
dotnet_naming_rule.locals_should_be_camel_case.symbols = locals_and_parameters
dotnet_naming_rule.locals_should_be_camel_case.style = camel_case_style

dotnet_naming_symbols.locals_and_parameters.applicable_kinds = parameter, local

dotnet_naming_style.camel_case_style.capitalization = camel_case

# Local functions are PascalCase
dotnet_naming_rule.local_functions_should_be_pascal_case.severity = error
dotnet_naming_rule.local_functions_should_be_pascal_case.symbols = local_functions
dotnet_naming_rule.local_functions_should_be_pascal_case.style = local_function_style

dotnet_naming_symbols.local_functions.applicable_kinds = local_function

dotnet_naming_style.local_function_style.capitalization = pascal_case

# By default, name items with PascalCase
dotnet_naming_rule.members_should_be_pascal_case.severity = error
dotnet_naming_rule.members_should_be_pascal_case.symbols = all_members
dotnet_naming_rule.members_should_be_pascal_case.style = pascal_case_style

dotnet_naming_symbols.all_members.applicable_kinds = *

dotnet_naming_style.pascal_case_style.capitalization = pascal_case